{"version":3,"sources":["uva2.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setSpot","event","setState","spot","target","value","state","spots","_useState","useState","_useState2","slicedToArray","setSpots","react_default","a","createElement","type","onChange","Event","Fragment","map","temp","push","_this2","className","src","Logo","alt","sp","TextField","variant","placeholder","Button","color","onClick","setSetSpot","Component","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4RCsHzBC,cA3Gb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA0CRQ,QAAU,SAAAC,GACRR,EAAKS,SAAS,CACZC,KAAMF,EAAMG,OAAOC,SA3CrBZ,EAAKa,MAAQ,CACXH,KAAM,IAGRV,EAAKc,MAAQ,GANGd,0EAYR,IAAAe,EACkBC,mBAAS,IAD3BC,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAc,EAAA,GACDD,EADCG,EAAA,GACME,EADNF,EAAA,GAER,OACEG,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,gCACEF,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACLX,MAAOE,EACPU,SAAU,SAACC,GAAD,OAAWN,EAASM,EAAMd,OAAOC,iDAYjD,OACEQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,UACGnB,KAAKU,MAAMH,KAAKiB,IAAI,SAACjB,GAAD,OAAUU,EAAAC,EAAAC,cAAA,UAAKZ,0CAiBjCA,GACT,IAAIkB,EAAOzB,KAAKW,MAQhB,OAPAc,EAAKC,KAAKnB,GAGVP,KAAKM,SAAS,CACVK,MAAOc,IAITR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,UACGM,EAAKD,IAAI,SAACjB,GAAD,OAAUU,EAAAC,EAAAC,cAAA,UAAKZ,wCASzB,IAAAoB,EAAA3B,KACN,OACEiB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACfX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,cAClBX,EAAAC,EAAAC,cAAA,OAAKU,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACvCd,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,yCAECnB,KAAKW,MAAMa,IAAI,SAACQ,GAAD,OACdf,EAAAC,EAAAC,cAAA,UAAKa,KAMPf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAWC,QAAQ,WAAWC,YAAY,YAAYd,SAAUrB,KAAKI,QAASK,MAAOT,KAAKU,MAAMH,OAEhGU,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQF,QAAQ,YAChBG,MAAM,UACNC,QAAS,WAGPX,EAAKY,WAAWZ,EAAKjB,MAAMH,QAL7B,uBA7FQiC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxClD,EAAAmD,EAAA,GAAAC,KAAApD,EAAAqD,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,WAAP,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.179a7fa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uva2.6266e09a.png\";","//import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {useState, Component} from \"react\";\r\nimport {TextField, Button} from \"@material-ui/core\";\r\nimport Logo from \"./uva2.png\";\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      spot: \"\",\r\n      \r\n    };\r\n    this.spots = [];\r\n    // const [spots, setSpots] = useState([]);\r\n\r\n  }\r\n\r\n\r\n  hoospots(){\r\n    const [spots, setSpots] = useState([]);\r\n    return(\r\n      <form>\r\n      <label>Enter your name:\r\n        <input\r\n          type=\"text\" \r\n          value={spots}\r\n          onChange={(Event) => setSpots(Event.target.value)}\r\n        />\r\n      </label>\r\n    </form>\r\n    )\r\n\r\n\r\n  }\r\n  \r\n\r\n  spotholder(){\r\n    // const spots = [\"hello\"];\r\n    return(\r\n      <>\r\n        <ul>\r\n          {this.state.spot.map((spot) => <h3>{spot}</h3>)}\r\n        </ul>\r\n      </>\r\n    )\r\n\r\n\r\n  }\r\n\r\n  setSpot = event => {\r\n    this.setState({\r\n      spot: event.target.value\r\n    });\r\n    // this.setState({\r\n    //   spots: [event.target.value]\r\n    // });\r\n  };\r\n\r\n  setSetSpot(spot) {\r\n    let temp = this.spots;\r\n    temp.push(spot);\r\n    // let sp2 = [spot];\r\n    // let arr = temp.concat(sp2);\r\n    this.setState({\r\n        spots: temp\r\n      });\r\n\r\n    return(\r\n      <>\r\n        <ul>\r\n          {temp.map((spot) => <h3>{spot}</h3>)}\r\n        </ul>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  \r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\"> \r\n      <header className=\"App-header\">\r\n      <img src={Logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>HooSpots</h1>\r\n        <h2>Where do you like to study?</h2>\r\n        \r\n        {this.spots.map((sp) => (\r\n          <h3>{sp}</h3>\r\n        ))}\r\n\r\n        {/* <this.hoospots /> */}\r\n\r\n  \r\n        <TextField variant=\"outlined\" placeholder='New Spot?' onChange={this.setSpot} value={this.state.spot} />\r\n  \r\n        <div className='Button'>\r\n          <Button variant='contained' \r\n          color='primary' \r\n          onClick={() => {\r\n            // alert(this.state.spot);\r\n\r\n            this.setSetSpot(this.state.spot);\r\n          }}\r\n          >\r\n            Send Spot\r\n          </Button>\r\n        </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}